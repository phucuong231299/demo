---
import { SEO } from "astro-seo";
import Footer from "@components/footer.astro";
import Navbar from "@components/navbar/navbar.astro";
import "@fontsource/inter/variable.css";

export interface Props {
  title: string;
}

// const { src } = await getImage({
//   src: "../../assets/hero.png",
//   width: 800,
//   height: 742,
//   format: "avif",
// });
// console.log(src);

const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();
export const footerData = {
  links: [
    {
      title: "Product",
      links: [
        { text: "Features", href: "#" },
        { text: "Security", href: "#" },
        { text: "Team", href: "#" },
        { text: "Enterprise", href: "#" },
        { text: "Customer stories", href: "#" },
        { text: "Pricing", href: "#" },
        { text: "Resources", href: "#" },
      ],
    },
    {
      title: "Platform",
      links: [
        { text: "Developer API", href: "#" },
        { text: "Partners", href: "#" },
        { text: "Atom", href: "#" },
        { text: "Electron", href: "#" },
        { text: "AstroWind Desktop", href: "#" },
      ],
    },
    {
      title: "Support",
      links: [
        { text: "Docs", href: "#" },
        { text: "Community Forum", href: "#" },
        { text: "Professional Services", href: "#" },
        { text: "Skills", href: "#" },
        { text: "Status", href: "#" },
      ],
    },
    {
      title: "Company",
      links: [
        { text: "About", href: "#" },
        { text: "Blog", href: "#" },
        { text: "Careers", href: "#" },
        { text: "Press", href: "#" },
        { text: "Inclusion", href: "#" },
        { text: "Social Impact", href: "#" },
        { text: "Shop", href: "#" },
      ],
    },
  ],

  socialLinks: [
    { ariaLabel: "Twitter", icon: "tabler:brand-twitter", href: "#" },
    { ariaLabel: "Instagram", icon: "tabler:brand-instagram", href: "#" },
    { ariaLabel: "Facebook", icon: "tabler:brand-facebook", href: "#" },
    { ariaLabel: "RSS", icon: "tabler:rss", href: "/rss" },
    { ariaLabel: "Github", icon: "tabler:brand-github", href: "" },
  ],
};
const resolvedImageWithDomain = new URL(
  "/opengraph.jpg",
  Astro.site
).toString();

const { title } = Astro.props;

const makeTitle = title
  ? title + " | " + "Thuận Gió"
  : "Thuận Gió - CÔNG TY TNHH CÔNG NGHỆ";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <script is:inline>
      
      // It's best to inline this in `head` to avoid FOUC (flash of unstyled content) when changing pages or themes
      if (
        localStorage.getItem("color-theme") === "dark" ||
        (!("color-theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }

    </script>
   

    <!-- <link rel="preload" as="image" href={src} alt="Hero" /> -->
    <SEO
      title={makeTitle}
      description="Astroship is a starter website template for Astro built with TailwindCSS."
      canonical={canonicalURL}
      twitter={{
        creator: "@surjithctly",
        site: "@web3templates",
        card: "summary_large_image",
      }}
      openGraph={{
        basic: {
          url: canonicalURL,
          type: "website",
          title: `Thuận Gió`,
          image: resolvedImageWithDomain,
        },
        image: {
          alt: "Thuận Gió Homepage Screenshot",
        },
      }}
    />
  </head>
  <body class="dark:bg-black dark:text-white">
    
    <Navbar />

    <slot />
    <br /><br /><br />
    <Footer {...footerData} />
    <style is:global>
      /* Improve Page speed */
      /* https://css-tricks.com/almanac/properties/c/content-visibility/ */

      @tailwind base;
      @tailwind components;
      @tailwind utilities;
      .display-none {
        @apply hidden;
      }
      body{
        height: 500px;
      }
    </style>
    <script>
      // const theme = localStorage.getItem("theme") || "light";
      // document.documentElement.dataset.theme = theme;
      // const userTheme = localStorage.getItem("theme");
      // const textWhite = document.querySelector("#sun");
      // const textDark = document.querySelector("#moon");
      // const systemTheme = window.matchMedia(
      //   "(prefers-color-scheme: dark)"
      // ).matches;
      // const iconToggle = () => {
      //   textWhite.classList.toggle("display-none");
      //   textDark.classList.toggle("display-none");
      // };
      // const themeCheck = () => {
      //   if (userTheme === "dark" || (!userTheme && systemTheme)) {
      //     document.documentElement.classList.add("dark");

      //     textWhite.classList.remove("hidden");
      //     return;
      //   }

      //   textDark.classList.remove("hidden");
      // };
      // const themeSwitch = () => {
      //   if (document.documentElement.classList.contains("dark")) {
      //     document.documentElement.classList.remove("dark");
      //     localStorage.setItem("theme", "light");

      //     return;
      //   }
      //   document.documentElement.classList.add("dark");
      //   localStorage.setItem("theme", "dark");
      // };
      // textWhite.addEventListener("click", () => {
      //   themeSwitch();
      //   textWhite.classList.add("hidden");
      //   textDark.classList.remove("hidden");
      // });
      // textDark.addEventListener("click", () => {
      //   themeSwitch();
      //   textDark.classList.add("hidden");
      //   textWhite.classList.remove("hidden");
      // });

      // themeCheck();

      var themeToggleDarkIcon = document.getElementById(
        "theme-toggle-dark-icon"
      );
      var themeToggleLightIcon = document.getElementById(
        "theme-toggle-light-icon"
      );

      // Change the icons inside the button based on previous settings
      if (
        localStorage.getItem("color-theme") === "dark" ||
        (!("color-theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        themeToggleLightIcon.classList.remove("hidden");
      } else {
        themeToggleDarkIcon.classList.remove("hidden");
      }

      var themeToggleBtn = document.getElementById("theme-toggle");

      themeToggleBtn.addEventListener("click", function () {
        // toggle icons inside button
        themeToggleDarkIcon.classList.toggle("hidden");
        themeToggleLightIcon.classList.toggle("hidden");

        // if set via local storage previously
        if (localStorage.getItem("color-theme")) {
          if (localStorage.getItem("color-theme") === "light") {
            document.documentElement.classList.add("dark");
            localStorage.setItem("color-theme", "dark");
          } else {
            document.documentElement.classList.remove("dark");
            localStorage.setItem("color-theme", "light");
          }

          // if NOT set via local storage previously
        } else {
          if (document.documentElement.classList.contains("dark")) {
            document.documentElement.classList.remove("dark");
            localStorage.setItem("color-theme", "light");
          } else {
            document.documentElement.classList.add("dark");
            localStorage.setItem("color-theme", "dark");
          }
        }
      });
    </script>
  </body>
</html>
